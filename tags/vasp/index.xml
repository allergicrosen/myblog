<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Vasp on allergicrosen</title>
        <link>https://allergicrosen.fun/tags/vasp/</link>
        <description>Recent content in Vasp on allergicrosen</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>allergicrosen</copyright>
        <lastBuildDate>Tue, 24 Dec 2024 13:46:21 +0000</lastBuildDate><atom:link href="https://allergicrosen.fun/tags/vasp/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>广州超算编译安装Vasp.5.4.4</title>
        <link>https://allergicrosen.fun/p/vasp_compile/</link>
        <pubDate>Wed, 27 Nov 2024 18:01:14 +0800</pubDate>
        
        <guid>https://allergicrosen.fun/p/vasp_compile/</guid>
        <description>&lt;img src="https://allergicrosen.fun/p/vasp_compile/vasp.webp" alt="Featured image of post 广州超算编译安装Vasp.5.4.4" /&gt;&lt;p&gt;这是一个vasp.5.4.4的编译教程（以广州超算为例）&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;准备好vasp544安装包&#34;&gt;准备好vasp.5.4.4安装包
&lt;/h2&gt;&lt;p&gt;自行下载，或者邮件给我留言 &lt;a href=&#34;mailto:liaojinbo1999@163.com&#34;&gt;点击发送电子邮件至liaojinbo1999@163.com &lt;/a&gt;，vasp为商业软件，请确保有授权！&lt;/p&gt;
&lt;p&gt;好了，准备好压缩包&lt;code&gt;vasp.5.4.4.tar.gz&lt;/code&gt;，解压，进入解压后的目录。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tar -zxvf vasp.5.4.4.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; vasp.5.4.4/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;ls&lt;/code&gt;发现有以下文件和目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ls
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;arch  bin  build  makefile  README  src
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color: blue; font-size:15px&#34;&gt;arch/：该目录通常包含特定于硬件架构的配置文件，例如针对不同操作系统和硬件架构的Makefile模板。你可以在这里选择或创建适合你系统的配置文件。&lt;br&gt;bin/：该目录通常为空，或者包含最终编译的VASP可执行文件。在编译完成后，VASP的可执行文件会放在这个目录下。&lt;br&gt;build/：此目录通常包含用于编译过程的临时文件。编译时会生成对象文件和中间文件，最终会被链接到 bin/ 目录中的可执行文件&lt;u&gt;(std、gam、ncl)&lt;/u&gt;。&lt;br&gt;makefile：这个文件是VASP的主Makefile，包含编译VASP所需的各种参数设置和规则。你需要根据你系统的环境编辑这个文件以适应你的编译器和库。&lt;br&gt;README：该文件通常包含VASP的安装说明、编译和运行的基本指导。在安装之前，建议阅读该文件。&lt;br&gt;src/：这个目录包含VASP的源代码。编译时，所有源代码文件将被编译成目标文件，然后链接成最终的VASP可执行文件。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;配置环境&#34;&gt;配置环境
&lt;/h2&gt;&lt;h3 id=&#34;查看hpc已有的编译器&#34;&gt;查看HPC已有的编译器
&lt;/h3&gt;&lt;p&gt;命令行输入&lt;code&gt;module av&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ module av
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--------------------------------------------------- /APP/u22/x86/modulepath/Compilers ---------------------------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcc/9.5.0                               mpi/mpich/4.1.2-gcc-11.4.0-ch4                 mpi/mpich/4.1.2-icx-oneapi2024.2-ch4-dbg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;intel/oneapi2023.2_impi                 mpi/mpich/4.1.2-gcc-11.4.0-ch4-dbg             mpi/mpich/4.3.2-icc-oneapi2023.2-ch4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;intel/oneapi2023.2_noimpi               mpi/mpich/4.1.2-icc-oneapi2023.2-ch3-shared    mpi/openmpi/4.1.1-icc-oneapi2023.2-ch4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;intel/oneapi2024.2_impi                 mpi/mpich/4.1.2-icc-oneapi2023.2-ch4           mpi/openmpi/4.1.6-icc-oneapi2023.2-ch4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;intel/oneapi2024.2_noimpi               mpi/mpich/4.1.2-icc-oneapi2023.2-ch4-dbg       mpi/openmpi/5.0.0-gcc-9.5.0-ch4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mpi/mpich/3.4.3-gcc-9.5.0-ch4           mpi/mpich/4.1.2-icx-oneapi2023.2-ch4           mpi/openmpi/5.0.0-gcc-11.4.0-ch4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mpi/mpich/4.1.2-gcc-9.5.0-ch4           mpi/mpich/4.1.2-icx-oneapi2023.2-ch4-dbg       mpi/openmpi/5.0.0-icc-oneapi2023.2-ch4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mpi/mpich/4.1.2-gcc-9.5.0-ch4_openfoam  mpi/mpich/4.1.2-icx-oneapi2023.2-ch4_openfoam  mpi/openmpi/5.0.0-icx-oneapi2023.2-ch4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mpi/mpich/4.1.2-gcc-11.4.0-ch3          mpi/mpich/4.1.2-icx-oneapi2024.2-ch4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我需要使用Intel编译器和MPI编译环境，所以我选择加载这两个&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;module purge
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;module load intel/oneapi2023.2_impi
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;module load mpi/mpich/4.1.2-gcc-11.4.0-ch4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;module list
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了确保不与其它模块冲突，所以使用&lt;code&gt;module purge&lt;/code&gt;最开始先卸载所有模块，为了确认是否成功加载模块，使用了&lt;code&gt;module list&lt;/code&gt;命令 检查已加载的模块。&lt;/p&gt;
&lt;p&gt;进入arch目录下，选择所需的makefile文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$cd&lt;/span&gt; arch/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ls
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    makefile.include.linux_gnu  makefile.include.linux_intel  makefile.include.linux_intel_serial  makefile.include.linux_pgi
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;因为我使用intel的编译器，所以我将&lt;code&gt;makefile.include.linux_intel&lt;/code&gt;复制到上一级目录，命名为&lt;code&gt;makefile.include&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cp makefile.include.linux_intel ../makefile.include
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;打开上一级目录中自己刚复制过来的&lt;code&gt;makefile.include&lt;/code&gt;发现其内容如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Precompiler options&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CPP_OPTIONS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -DHOST&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;LinuxIFC&lt;span class=&#34;se&#34;&gt;\&amp;#34;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -DMPI -DMPI_BLOCK&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8000&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -Duse_collective &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -DscaLAPACK &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -DCACHE_SIZE&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4000&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -Davoidalloc &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -Duse_bse_te &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -Dtbdyn &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -Duse_shmem
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CPP&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; fpp -f_com&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;no -free -w0  &lt;span class=&#34;nv&#34;&gt;$*&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;FUFFIX&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$*&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;SUFFIX&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;CPP_OPTIONS&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;FC&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpiifort
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;FCL&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpiifort -mkl&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;sequential -lstdc++
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;FREE&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -free -names lowercase
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;FFLAGS&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -assume byterecl -w
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;OFLAG&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -O2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;OFLAG_IN&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;OFLAG&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;DEBUG&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -O0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;MKL_PATH&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;MKLROOT&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;/lib/intel64
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;BLAS&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;LAPACK&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;BLACS&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -lmkl_blacs_intelmpi_lp64
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;SCALAPACK&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;MKL_PATH&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;/libmkl_scalapack_lp64.a &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;BLACS&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;OBJECTS&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; fftmpiw.o fftmpi_map.o fft3dlib.o fftw3d.o
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;INCS&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-I&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;MKLROOT&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;/include/fftw
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;................
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个文件是编译所需的环境，确保环境正常&lt;/p&gt;
&lt;h3 id=&#34;确保编译环境已加载也就是前面提到的&#34;&gt;确保编译环境已加载（也就是前面提到的）
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;module purge
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;module load intel/oneapi2023.2_impi
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;module load mpi/mpich/4.1.2-gcc-11.4.0-ch4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;module list
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不放心可以再次执行下，或者&lt;code&gt;module list&lt;/code&gt;查看下&lt;/p&gt;
&lt;h3 id=&#34;开始编译&#34;&gt;开始编译
&lt;/h3&gt;&lt;p&gt;回到vasp主目录下，开始编译&lt;br&gt;
因为我需要std、gam、和ncl，所以我直接输入&lt;code&gt;make all&lt;/code&gt;，如果没有问题那就会开始编译，等待即可&lt;u&gt;（需要几十分钟）&lt;/u&gt;。&lt;br&gt;
编译完成进入&lt;code&gt;./bin&lt;/code&gt;目录下,发现多了这三个执行文件，那么表示以及成功了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; $ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; bin/&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;ls
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vasp_gam  vasp_ncl  vasp_std
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;设置环境变量&#34;&gt;设置环境变量
&lt;/h3&gt;&lt;p&gt;两种方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将&lt;code&gt;vasp_gam  vasp_ncl  vasp_std&lt;/code&gt;所在路径添加到&lt;code&gt;~/.bashrc&lt;/code&gt;&lt;strong&gt;（推荐使用）&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vi ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/your path/vasp.5.4.4/bin/:&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;将其写入脚本&lt;br&gt;
后续会讲到&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;测试&#34;&gt;测试
&lt;/h2&gt;&lt;p&gt;编译完后测试下是否能正常运行，准备好测试文件&lt;br&gt;
我这里准备了5个文件，分别为&lt;code&gt;INCAR、POSCAR、POTCAR、KPOINTS、vasp-sbatch.sh&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;脚本编写&#34;&gt;脚本编写
&lt;/h3&gt;&lt;p&gt;在测试前，可能很多人并不知道如何编写一个合适的任务提交脚本，这里我简单介绍下脚本的编写规则&lt;/p&gt;
&lt;h4 id=&#34;查看官方手册&#34;&gt;查看官方手册
&lt;/h4&gt;&lt;p&gt;最简单的就是查看官方的手册，以广州超算来说，打开&lt;code&gt;HPC1系统用户手册&lt;/code&gt;可以找到脚本的编写规则&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;目前 HPC1 系统部署的资源管理系统包括多种作业提交方式，包括&lt;code&gt;批处理作业提交方式 yhbatch 和交互作业提交方式 yhrun&lt;/code&gt;。作业终止方式为 yhcancel 命令，需要获取作业的 jobid，可以通过 yhq 命令查看获得。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;如果没有交互需求，请使用 yhbatch 提交任务&lt;/strong&gt;。yhbatch 提交的作业终端关闭
时不会受到影响，登陆结点 down 机时也不会受到影响，强烈推荐使用 yhbatch 提
交任务。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;yhbatch 运行的主要格式如下：&lt;br&gt;
&lt;code&gt;yhbatch [options] program &lt;/code&gt;&lt;br&gt;
yhbatch 包括多个选项，用户最常使用的选项如下：&lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;  
&lt;p&gt;&lt;code&gt;-n, --ntasks=ntasks &lt;/code&gt; &lt;br&gt;
指定要运行的进程数。请求 yhrun 分配/加载 ntasks 个进程。省缺的情况是每
个 CPU 核运行一个进程，但是-c 参数将改变此省缺值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-N, --nodes=minnodes[-maxnodes] &lt;/code&gt;&lt;br&gt;
请求为此作业至少分配 minnodes 个结点。调度器可能决定在多于 minnodes
个结点上启动作业。可以通过指定 maxnodes 限制最多分配的结点数（如“&amp;ndash;
nodes=2-4”）。最少和最多结点数可以相同以便指定确切的结点数（如“&amp;ndash;
nodes=2-2”将请求两个并且仅仅两个结点）。如果没有指定-N，省缺的行为是分
配足够的结点以满足-n 选项的要求。&lt;br&gt;
&lt;code&gt;-p, --partition=partition&lt;/code&gt; &lt;br&gt;
从分区 partition 请求资源。如未指定，则省缺为默认分区。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-t, --time=minutes &lt;/code&gt; &lt;br&gt;
设置作业的运行时间限制为 minutes 分钟。省缺值为分区的时间限制值。当到
达时间限制时，作业的进程将被发送 SIGTERM 以及 SIGKILL 信号终止执行。完
整格式为&amp;ndash;time=days-hours:minutes:seconds，建议包机时用户使用该选项。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-D, --chdir=path&lt;/code&gt;&lt;br&gt;
加载的作业进程在执行前将工作目录改变到 path 。省缺情况下作业 yhrun 进
程的当前工作目录。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-l, --label &lt;/code&gt;&lt;br&gt;
在标准输出/标准错误的每行之前添加任务号。通常，远程任务的标准输出和
标准错误通过行缓冲直接传递到 yhrun 的标准输出和标准错误。&amp;ndash;label 选项将在
每行输出前面添加远程任务的 ID。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-J, --job-name=jobname &lt;/code&gt; &lt;br&gt;
指定作业的名字。省缺值是可执行程序的名字 program 。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-W, --wait=seconds &lt;/code&gt;&lt;br&gt;
指定在第一个任务退出后，到终止所有剩余任务之前的等待时间。0 表示无限
等待（60 秒后将发出一个警告）。省缺值可由系统配置文件中的参数设置。此选
项用于确保作业在一个或多个任务提前退出时能够及时终止。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-w, --nodelist=nodelist|filename &lt;/code&gt;&lt;br&gt;
请求指定列表中的结点。分配给作业的将至少包含这些结点。nodelist 可以是
逗号分割的结点列表或范围表达式（如 cn[1-5,7,12]）。如果包含“/”字符，则
nodelist 将会被当作是一个文件名，其中包含了所请求的结点列表。&lt;/p&gt;
&lt;p&gt;具体不多赘述了，有需要的可以向我要官方文档[ &lt;a href=&#34;mailto:liaojinbo1999@163.com&#34;&gt;点击发送电子邮件 &lt;/a&gt;]&lt;/p&gt;
&lt;h4 id=&#34;编写脚本&#34;&gt;编写脚本
&lt;/h4&gt;&lt;h5 id=&#34;以手册为例&#34;&gt;以手册为例：
&lt;/h5&gt;&lt;p&gt;sub.sh 如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;VASP_BIN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/your path/vasp.5.4.4/bin/vasp_std
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;yhrun -n &lt;span class=&#34;m&#34;&gt;28&lt;/span&gt; -p TH_HPC1 &lt;span class=&#34;nv&#34;&gt;$VASP_BIN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;前面提到&lt;code&gt;yhrun&lt;/code&gt;是交互提交作业,虽然可以提交任务，但是要保证窗口一直挂着，且不能断链，这显然是很不方便的，所以还需要&lt;code&gt;yhbatch&lt;/code&gt;提交脚本。&lt;br&gt;
将脚本命名为&lt;code&gt;run.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;module purge
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;module load intel/oneapi2023.2_impi
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;module load mpi/mpich/4.1.2-gcc-11.4.0-ch4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;module list
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/your path/vasp.5.4.4/bin/:&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;yhbatch -n &lt;span class=&#34;m&#34;&gt;28&lt;/span&gt; -p TH_HPC1 -J example1 ./sub.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;自己写sbatch任务脚本&#34;&gt;自己写sbatch任务脚本
&lt;/h5&gt;&lt;p&gt;虽然以上脚本可以满足要求了，但是我还是觉得很麻烦，为什么我需要写两个脚本，我直接写一个多好，所以这是另一个方法，使用的是&lt;code&gt;sbatch&lt;/code&gt;&lt;br&gt;
具体用法参照官方手册&lt;a class=&#34;link&#34; href=&#34;https://slurm.schedmd.com/sbatch.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;slurm官方手册&lt;/a&gt;

   &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
       height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
       &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
       &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
           fill=&#34;currentColor&#34;&gt;
   &lt;/svg&gt;&lt;/span&gt;
   
    &lt;br&gt;
这是我自己的脚本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#SBATCH -J ljb         ## Job Name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#SBATCH -o out.%j            ## standard output&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#SBATCH -e err.%j              ## standard error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#SBATCH -p mars               ## Partition&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#SBATCH -N 1                   ## Number of nodes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#SBATCH --ntasks-per-node=64   ## Each node has n tasks&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#SBATCH -t 07-23:57:25         ## time for your job: 2 d，23 h ，57 min and 23 s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;module purge
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;module load intel/oneapi2023.2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;module load mpi/mpich/4.1.2-gcc-11.4.0-ch4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/your path/vasp.5.4.4/bin/vasp_ncl:&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;module list
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;ulimit&lt;/span&gt; -s unlimited
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;VASP_BIN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/your path/vasp.5.4.4/bin/vasp_std
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;yhrun &lt;span class=&#34;nv&#34;&gt;$VASP_BIN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;运行测试&#34;&gt;运行测试
&lt;/h3&gt;&lt;p&gt;准备好vasp所需文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INCAR  KPOINTS  POSCAR  POTCAR  vasp-sbatch.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sbatch vasp-sbatch.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Submitted batch job &lt;span class=&#34;m&#34;&gt;133974&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;squeue&lt;/code&gt;查看节点状态，显示R&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; JOBID PARTITION     NAME     USER ST       TIME  NODES NODELIST&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;REASON&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;m&#34;&gt;133974&lt;/span&gt;      mars      ljb caep_lts  R       1:28      &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; cnode5131
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;显示已提交成功。&lt;br&gt;
检查&lt;code&gt;OUTCAR&lt;/code&gt;或者&lt;code&gt;out.133974&lt;/code&gt;（根据实际名字查看）文件是否正常运行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ tail out.133974
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; POSCAR found &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt; information on POSCAR  Pb I  C  N  H
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; POSCAR found :  &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; types and      &lt;span class=&#34;m&#34;&gt;92&lt;/span&gt; ions
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; scaLAPACK will be used
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; LDA part: xc-table &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; Pade appr. of Perdew
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; POSCAR, INCAR and KPOINTS ok, starting setup
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; FFT: planning ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; WAVECAR not &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; entering main loop
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       N       E                     dE             d eps       ncg     rms          rms&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;DAV:   &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;     0.129655355373E+04    0.12966E+04   -0.13885E+05 &lt;span class=&#34;m&#34;&gt;17024&lt;/span&gt;   0.108E+03
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;顺利运行且无报错，完毕。&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        
    </channel>
</rss>
